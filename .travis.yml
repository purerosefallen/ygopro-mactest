language: cpp
os:
- linux
- osx
env:
  matrix:
  - locale: en-US
sudo: required
dist: trusty
osx_image: xcode8
git:
  submodules: false
addons:
  ssh_known_hosts:
  - github.com
  apt:
    packages:
    - libfreetype6-dev
    - libevent-dev
    - libsqlite3-dev
    - libirrlicht-dev
    - liblua5.2-dev
    - libgl1-mesa-dev
    - libglu-dev
before_install:
- git clone https://github.com/moecube/ygopro
- git clone https://github.com/Smile-DK/ygopro-svrelease
- git clone --branch=local https://github.com/purerosefallen/ygopro-222DIY
- cp -rf ygopro-222DIY/ocgcore ygopro
- cp -rf ygopro-222DIY/gframe/single_duel.cpp ygopro/gframe
- cp -rf ygopro-222DIY/gframe/tag_duel.cpp ygopro/gframe
- cd ygopro
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; brew install freetype libevent
  sqlite lua dylibbundler; curl --location --retry 5 https://github.com/premake/premake-core/releases/download/v5.0.0-alpha12/premake-5.0.0-alpha12-macosx.tar.gz
  | tar zfx -; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then curl --retry 5 --connect-timeout 30 --location --remote-header-name --remote-name http://downloads.sourceforge.net/irrlicht/irrlicht-1.8.4.zip; unzip irrlicht-1.8.4.zip ; cd irrlicht-1.8.4/ ; cp ../premake/irrlicht/irrlicht-mac.patch . ; patch -p1 < irrlicht-mac.patch ; cd source/Irrlicht/MacOSX/ ; xcodebuild -project MacOSX.xcodeproj ; cp build/Release/libIrrlicht.a /usr/local/lib/ ;  cp -r ../../../include /usr/local/include/irrlicht ; cd ../../../../ ; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O - https://github.com/premake/premake-core/releases/download/v5.0.0-alpha12/premake-5.0.0-alpha12-linux.tar.gz
  | tar zfx -; fi
script:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./premake5 gmake --cc=clang; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./premake5 gmake; fi
- cd build
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sed -i 's/-llua/-llua5.2/g' ygopro.make;
  fi
- make config=release ygopro
- cd ..
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv bin/release/ygopro ./; strip ygopro;
  fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    mkdir -p ygopro.app/Contents/MacOS;
    mv bin/release/ygopro ygopro.app/Contents/MacOS;
    dylibbundler -x ygopro.app/Contents/MacOS/ygopro -b -d ygopro.app/Contents/Frameworks/ -p @executable_path/../Frameworks/ -cd;
    strip ygopro.app/Contents/MacOS/ygopro; mkdir ygopro.app/Contents/Resources;
    mv premake/gframe/ygopro.icns ygopro.app/Contents/Resources/Icon.icns;
    defaults write "$PWD/ygopro.app/Contents/Info.plist" "CFBundleIconFile" "Icon.icns";
    defaults write "$PWD/ygopro.app/Contents/Info.plist" "CFBundleIdentifier" "moe.mycard.ygopro.koishi";
    if [[ "$ENABLE_CERTIFICATE" == "true" ]]; then
      echo $CERTIFICATE | base64 --decode --output cert.p12;
      security create-keychain -p "" build.keychain; security unlock-keychain -p "" build.keychain;
      security import cert.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign;
      codesign --deep --keychain build.keychain --sign "$(security find-identity -v -p
      codesigning build.keychain | head -1 | grep -o '".*"' | tr -d '"')" ygopro.app;
    fi
  fi
- cd ../ygopro-svrelease
- git config --global user.name Smile-DK
- git config --global user.email 2236141431@qq.com
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then rm -rf linux; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rm -rf mac; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mkdir linux; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mkdir mac; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp -rf ../ygopro/ygopro linux; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp -rf ../ygopro/ygopro.app mac; fi
- git add . -A
- git commit -m "Build by Travis in $TRAVIS_OS_NAME"
- git push $SMILE/Smile-DK/ygopro-svrelease master

branches:
  only:
  - master
  - /\d+\..+/

